---
import DateCard from './DateCard.astro';

interface Props {
	author_name: string;
	title: string;
	body: string;
  image_url: string;
  created_at: Date;
}

const { author_name, title, body, image_url, created_at } = Astro.props;

const date = new Date(created_at);
const month = date.toLocaleString('default', { month: 'short' });
const day = date.getDate();

const created_date = {
  month: month,
  day: day
};
---

<style>
  article {
    padding: 20px;
    width: 850px;
    height: fit-content;
  }

  .date {
    position: relative;
    margin-bottom: 20px;
  }

  .share {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: end;
  }

  svg {
    margin-right: 5px;
  }

  .share button {
    background-color: transparent;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  .share button:hover {
    background-color: #e8e8e8;
  }

  img {
    width: 100%;
    height: 400px;
    object-fit: cover;
  }

  h3 {
    margin: 0 0 5px 0;
    color: #E31523;
    font-weight: 500;
  }

  h1 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: bold;
  }

  a {
    color: #000000;
    font-weight: bold;
    text-decoration: none;
    border-bottom: 3px solid #000000;
  }

  a:hover {
    color: #3b0edf;
  }
</style>

<article>
  <div class="date">
    <img src={image_url} alt={title}>
    <DateCard created_date={created_date} />
  </div>
  <div class="share">
    <button>
      <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-forward"><polyline points="15 17 20 12 15 7"/><path d="M4 18v-2a4 4 0 0 1 4-4h12"/></svg>
      Share
    </button>
  </div>
  <h3 id="author">{author_name}</h3>
  <h1>{title}</h1>
  <p>{body}</p>
  <a href="">Read Article</a>
</article>


<script>
  type Author = {
    id: number;
    name: string;
    role: string;
    place: string;
    avatar_url: string;
  }

  const authorName = fetch('https://tmsph-sdi-challenges.pages.dev/challenges/authors.json')
    .then((res) => res.json())
    .then((authors) => {
      const author = authors.find((author: Author) => author.id === Astro.props.author_id);
      return author.name;
    });

  const authorElement = document.getElementById('author');

  if (authorElement) {
    authorName.then((name) => {
      authorElement.textContent = name;
    });
  }
</script>